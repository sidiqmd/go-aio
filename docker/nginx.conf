user nginx;
worker_processes auto;

events {
    worker_connections 5024;
}

http {
    # Define the rate limit zone
    limit_req_zone $binary_remote_addr zone=one:100m rate=20r/s;

    # Define the log format
    log_format api_log '$remote_addr - $remote_user [$time_local] '
    '"$request" $status $body_bytes_sent '
    '"$http_referer" "$http_user_agent" '
    '$request_time msec';

    map $http_user_agent $bad_bot {
        default 0;
        ~*(bot|crawl|spider) 1;
    }

    server {
        listen 80;

        # disable any limits to avoid HTTP 413 for large image uploads
        client_max_body_size 0;

        # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
        chunked_transfer_encoding on;

        sendfile on;

        include /etc/nginx/mime.types;
        default_type text/html;

        gzip on;
        gzip_http_version 1.1;
        gzip_disable "MSIE [1-6]\.";
        gzip_min_length 256;
        gzip_vary on;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_comp_level 9;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Scheme $scheme;

        access_log /var/log/nginx/api_access.log api_log;

        # this is the internal Docker DNS, cache only for 30s
        resolver 127.0.0.11 valid=30s;

        # Reject all requests from bad bots
        if ($bad_bot) {
            return 403;
        }

        #  Backend Service
        location /api/ {
            limit_req zone=one burst=20;
            # limit_conn addr 50;
            proxy_pass http://todo-be:8080/api/;
        }

        #  Frontend Service
        location / {
            proxy_pass http://todo-fe:80/;
        }
    }
}